/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0.4.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BaseToken
 */
export interface BaseToken {
    /**
     * 
     * @type {number}
     * @memberof BaseToken
     */
    decimals?: number;
    /**
     * 
     * @type {string}
     * @memberof BaseToken
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseToken
     */
    subunit?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseToken
     */
    tickerSymbol?: string;
    /**
     * 
     * @type {string}
     * @memberof BaseToken
     */
    unit?: string;
    /**
     * 
     * @type {boolean}
     * @memberof BaseToken
     */
    useMetricPrefix?: boolean;
}

/**
 * Check if a given object implements the BaseToken interface.
 */
export function instanceOfBaseToken(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BaseTokenFromJSON(json: any): BaseToken {
    return BaseTokenFromJSONTyped(json, false);
}

export function BaseTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): BaseToken {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'decimals': !exists(json, 'decimals') ? undefined : json['decimals'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'subunit': !exists(json, 'subunit') ? undefined : json['subunit'],
        'tickerSymbol': !exists(json, 'tickerSymbol') ? undefined : json['tickerSymbol'],
        'unit': !exists(json, 'unit') ? undefined : json['unit'],
        'useMetricPrefix': !exists(json, 'useMetricPrefix') ? undefined : json['useMetricPrefix'],
    };
}

export function BaseTokenToJSON(value?: BaseToken | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'decimals': value.decimals,
        'name': value.name,
        'subunit': value.subunit,
        'tickerSymbol': value.tickerSymbol,
        'unit': value.unit,
        'useMetricPrefix': value.useMetricPrefix,
    };
}

