/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0.4.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NodeConnectionMessageMetrics } from './NodeConnectionMessageMetrics';
import {
    NodeConnectionMessageMetricsFromJSON,
    NodeConnectionMessageMetricsFromJSONTyped,
    NodeConnectionMessageMetricsToJSON,
} from './NodeConnectionMessageMetrics';
import type { NodeConnectionMessagesMetrics } from './NodeConnectionMessagesMetrics';
import {
    NodeConnectionMessagesMetricsFromJSON,
    NodeConnectionMessagesMetricsFromJSONTyped,
    NodeConnectionMessagesMetricsToJSON,
} from './NodeConnectionMessagesMetrics';

/**
 * 
 * @export
 * @interface NodeConnectionMetrics
 */
export interface NodeConnectionMetrics {
    /**
     * 
     * @type {NodeConnectionMessageMetrics}
     * @memberof NodeConnectionMetrics
     */
    inMilestone?: NodeConnectionMessageMetrics;
    /**
     * 
     * @type {NodeConnectionMessagesMetrics}
     * @memberof NodeConnectionMetrics
     */
    nodeConnectionMessagesMetrics?: NodeConnectionMessagesMetrics;
    /**
     * Chain IDs of the chains registered to receiving L1 events
     * @type {Array<string>}
     * @memberof NodeConnectionMetrics
     */
    registered?: Array<string>;
}

/**
 * Check if a given object implements the NodeConnectionMetrics interface.
 */
export function instanceOfNodeConnectionMetrics(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function NodeConnectionMetricsFromJSON(json: any): NodeConnectionMetrics {
    return NodeConnectionMetricsFromJSONTyped(json, false);
}

export function NodeConnectionMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodeConnectionMetrics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inMilestone': !exists(json, 'inMilestone') ? undefined : NodeConnectionMessageMetricsFromJSON(json['inMilestone']),
        'nodeConnectionMessagesMetrics': !exists(json, 'nodeConnectionMessagesMetrics') ? undefined : NodeConnectionMessagesMetricsFromJSON(json['nodeConnectionMessagesMetrics']),
        'registered': !exists(json, 'registered') ? undefined : json['registered'],
    };
}

export function NodeConnectionMetricsToJSON(value?: NodeConnectionMetrics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inMilestone': NodeConnectionMessageMetricsToJSON(value.inMilestone),
        'nodeConnectionMessagesMetrics': NodeConnectionMessagesMetricsToJSON(value.nodeConnectionMessagesMetrics),
        'registered': value.registered,
    };
}

