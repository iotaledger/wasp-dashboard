/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0.4.0-alpha.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Output } from './Output';
import {
    OutputFromJSON,
    OutputFromJSONTyped,
    OutputToJSON,
} from './Output';

/**
 * 
 * @export
 * @interface OnLedgerRequest
 */
export interface OnLedgerRequest {
    /**
     * 
     * @type {Array<number>}
     * @memberof OnLedgerRequest
     */
    bytes?: Array<number>;
    /**
     * 
     * @type {string}
     * @memberof OnLedgerRequest
     */
    id?: string;
    /**
     * 
     * @type {Output}
     * @memberof OnLedgerRequest
     */
    output?: Output;
    /**
     * 
     * @type {string}
     * @memberof OnLedgerRequest
     */
    outputId?: string;
}

/**
 * Check if a given object implements the OnLedgerRequest interface.
 */
export function instanceOfOnLedgerRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OnLedgerRequestFromJSON(json: any): OnLedgerRequest {
    return OnLedgerRequestFromJSONTyped(json, false);
}

export function OnLedgerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OnLedgerRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'bytes': !exists(json, 'bytes') ? undefined : json['bytes'],
        'id': !exists(json, 'id') ? undefined : json['id'],
        'output': !exists(json, 'output') ? undefined : OutputFromJSON(json['output']),
        'outputId': !exists(json, 'outputId') ? undefined : json['outputId'],
    };
}

export function OnLedgerRequestToJSON(value?: OnLedgerRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'bytes': value.bytes,
        'id': value.id,
        'output': OutputToJSON(value.output),
        'outputId': value.outputId,
    };
}

