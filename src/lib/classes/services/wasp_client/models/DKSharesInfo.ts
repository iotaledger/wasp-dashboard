/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface DKSharesInfo
 */
export interface DKSharesInfo {
    /**
     * New generated shared address.
     * @type {string}
     * @memberof DKSharesInfo
     */
    address?: string;
    /**
     * 
     * @type {number}
     * @memberof DKSharesInfo
     */
    peerIndex?: number;
    /**
     * Public keys of the nodes sharing the key.
     * @type {Array<Array<number>>}
     * @memberof DKSharesInfo
     */
    peerPubKeys?: Array<Array<number>>;
    /**
     * Public key shares for all the peers.
     * @type {Array<Array<number>>}
     * @memberof DKSharesInfo
     */
    pubKeyShares?: Array<Array<number>>;
    /**
     * Shared public key.
     * @type {Array<number>}
     * @memberof DKSharesInfo
     */
    sharedPubKey?: Array<number>;
    /**
     * 
     * @type {number}
     * @memberof DKSharesInfo
     */
    threshold?: number;
}

/**
 * Check if a given object implements the DKSharesInfo interface.
 */
export function instanceOfDKSharesInfo(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DKSharesInfoFromJSON(json: any): DKSharesInfo {
    return DKSharesInfoFromJSONTyped(json, false);
}

export function DKSharesInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): DKSharesInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'address': !exists(json, 'address') ? undefined : json['address'],
        'peerIndex': !exists(json, 'peerIndex') ? undefined : json['peerIndex'],
        'peerPubKeys': !exists(json, 'peerPubKeys') ? undefined : json['peerPubKeys'],
        'pubKeyShares': !exists(json, 'pubKeyShares') ? undefined : json['pubKeyShares'],
        'sharedPubKey': !exists(json, 'sharedPubKey') ? undefined : json['sharedPubKey'],
        'threshold': !exists(json, 'threshold') ? undefined : json['threshold'],
    };
}

export function DKSharesInfoToJSON(value?: DKSharesInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'address': value.address,
        'peerIndex': value.peerIndex,
        'peerPubKeys': value.peerPubKeys,
        'pubKeyShares': value.pubKeyShares,
        'sharedPubKey': value.sharedPubKey,
        'threshold': value.threshold,
    };
}

