/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FeePolicy } from './FeePolicy';
import {
    FeePolicyFromJSON,
    FeePolicyFromJSONTyped,
    FeePolicyToJSON,
} from './FeePolicy';
import type { Limits } from './Limits';
import {
    LimitsFromJSON,
    LimitsFromJSONTyped,
    LimitsToJSON,
} from './Limits';

/**
 * 
 * @export
 * @interface GovChainInfoResponse
 */
export interface GovChainInfoResponse {
    /**
     * ChainID (Bech32-encoded).
     * @type {string}
     * @memberof GovChainInfoResponse
     */
    chainID: string;
    /**
     * The chain owner address (Bech32-encoded).
     * @type {string}
     * @memberof GovChainInfoResponse
     */
    chainOwnerId: string;
    /**
     * (base64) Optional extra metadata that is appended to the L1 AliasOutput
     * @type {string}
     * @memberof GovChainInfoResponse
     */
    customMetadata?: string;
    /**
     * 
     * @type {FeePolicy}
     * @memberof GovChainInfoResponse
     */
    gasFeePolicy: FeePolicy;
    /**
     * 
     * @type {Limits}
     * @memberof GovChainInfoResponse
     */
    gasLimits: Limits;
}

/**
 * Check if a given object implements the GovChainInfoResponse interface.
 */
export function instanceOfGovChainInfoResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "chainID" in value;
    isInstance = isInstance && "chainOwnerId" in value;
    isInstance = isInstance && "gasFeePolicy" in value;
    isInstance = isInstance && "gasLimits" in value;

    return isInstance;
}

export function GovChainInfoResponseFromJSON(json: any): GovChainInfoResponse {
    return GovChainInfoResponseFromJSONTyped(json, false);
}

export function GovChainInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GovChainInfoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'chainID': json['chainID'],
        'chainOwnerId': json['chainOwnerId'],
        'customMetadata': !exists(json, 'customMetadata') ? undefined : json['customMetadata'],
        'gasFeePolicy': FeePolicyFromJSON(json['gasFeePolicy']),
        'gasLimits': LimitsFromJSON(json['gasLimits']),
    };
}

export function GovChainInfoResponseToJSON(value?: GovChainInfoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'chainID': value.chainID,
        'chainOwnerId': value.chainOwnerId,
        'customMetadata': value.customMetadata,
        'gasFeePolicy': FeePolicyToJSON(value.gasFeePolicy),
        'gasLimits': LimitsToJSON(value.gasLimits),
    };
}

