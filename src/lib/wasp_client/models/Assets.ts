/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { NativeToken } from './NativeToken';
import {
    NativeTokenFromJSON,
    NativeTokenFromJSONTyped,
    NativeTokenToJSON,
} from './NativeToken';

/**
 * 
 * @export
 * @interface Assets
 */
export interface Assets {
    /**
     * The base tokens (uint64 as string)
     * @type {string}
     * @memberof Assets
     */
    baseTokens: string;
    /**
     * 
     * @type {Array<NativeToken>}
     * @memberof Assets
     */
    nativeTokens: Array<NativeToken>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Assets
     */
    nfts: Array<string>;
}

/**
 * Check if a given object implements the Assets interface.
 */
export function instanceOfAssets(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "baseTokens" in value;
    isInstance = isInstance && "nativeTokens" in value;
    isInstance = isInstance && "nfts" in value;

    return isInstance;
}

export function AssetsFromJSON(json: any): Assets {
    return AssetsFromJSONTyped(json, false);
}

export function AssetsFromJSONTyped(json: any, ignoreDiscriminator: boolean): Assets {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseTokens': json['baseTokens'],
        'nativeTokens': ((json['nativeTokens'] as Array<any>).map(NativeTokenFromJSON)),
        'nfts': json['nfts'],
    };
}

export function AssetsToJSON(value?: Assets | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'baseTokens': value.baseTokens,
        'nativeTokens': ((value.nativeTokens as Array<any>).map(NativeTokenToJSON)),
        'nfts': value.nfts,
    };
}

