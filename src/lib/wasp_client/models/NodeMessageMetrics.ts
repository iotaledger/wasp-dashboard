/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AliasOutputMetricItem } from './AliasOutputMetricItem';
import {
    AliasOutputMetricItemFromJSON,
    AliasOutputMetricItemFromJSONTyped,
    AliasOutputMetricItemToJSON,
} from './AliasOutputMetricItem';
import type { InOutputMetricItem } from './InOutputMetricItem';
import {
    InOutputMetricItemFromJSON,
    InOutputMetricItemFromJSONTyped,
    InOutputMetricItemToJSON,
} from './InOutputMetricItem';
import type { InStateOutputMetricItem } from './InStateOutputMetricItem';
import {
    InStateOutputMetricItemFromJSON,
    InStateOutputMetricItemFromJSONTyped,
    InStateOutputMetricItemToJSON,
} from './InStateOutputMetricItem';
import type { InterfaceMetricItem } from './InterfaceMetricItem';
import {
    InterfaceMetricItemFromJSON,
    InterfaceMetricItemFromJSONTyped,
    InterfaceMetricItemToJSON,
} from './InterfaceMetricItem';
import type { MilestoneMetricItem } from './MilestoneMetricItem';
import {
    MilestoneMetricItemFromJSON,
    MilestoneMetricItemFromJSONTyped,
    MilestoneMetricItemToJSON,
} from './MilestoneMetricItem';
import type { OnLedgerRequestMetricItem } from './OnLedgerRequestMetricItem';
import {
    OnLedgerRequestMetricItemFromJSON,
    OnLedgerRequestMetricItemFromJSONTyped,
    OnLedgerRequestMetricItemToJSON,
} from './OnLedgerRequestMetricItem';
import type { PublisherStateTransactionItem } from './PublisherStateTransactionItem';
import {
    PublisherStateTransactionItemFromJSON,
    PublisherStateTransactionItemFromJSONTyped,
    PublisherStateTransactionItemToJSON,
} from './PublisherStateTransactionItem';
import type { TransactionIDMetricItem } from './TransactionIDMetricItem';
import {
    TransactionIDMetricItemFromJSON,
    TransactionIDMetricItemFromJSONTyped,
    TransactionIDMetricItemToJSON,
} from './TransactionIDMetricItem';
import type { TransactionMetricItem } from './TransactionMetricItem';
import {
    TransactionMetricItemFromJSON,
    TransactionMetricItemFromJSONTyped,
    TransactionMetricItemToJSON,
} from './TransactionMetricItem';
import type { TxInclusionStateMsgMetricItem } from './TxInclusionStateMsgMetricItem';
import {
    TxInclusionStateMsgMetricItemFromJSON,
    TxInclusionStateMsgMetricItemFromJSONTyped,
    TxInclusionStateMsgMetricItemToJSON,
} from './TxInclusionStateMsgMetricItem';
import type { UTXOInputMetricItem } from './UTXOInputMetricItem';
import {
    UTXOInputMetricItemFromJSON,
    UTXOInputMetricItemFromJSONTyped,
    UTXOInputMetricItemToJSON,
} from './UTXOInputMetricItem';

/**
 * 
 * @export
 * @interface NodeMessageMetrics
 */
export interface NodeMessageMetrics {
    /**
     * 
     * @type {AliasOutputMetricItem}
     * @memberof NodeMessageMetrics
     */
    inAliasOutput: AliasOutputMetricItem;
    /**
     * 
     * @type {MilestoneMetricItem}
     * @memberof NodeMessageMetrics
     */
    inMilestone: MilestoneMetricItem;
    /**
     * 
     * @type {OnLedgerRequestMetricItem}
     * @memberof NodeMessageMetrics
     */
    inOnLedgerRequest: OnLedgerRequestMetricItem;
    /**
     * 
     * @type {InOutputMetricItem}
     * @memberof NodeMessageMetrics
     */
    inOutput: InOutputMetricItem;
    /**
     * 
     * @type {InStateOutputMetricItem}
     * @memberof NodeMessageMetrics
     */
    inStateOutput: InStateOutputMetricItem;
    /**
     * 
     * @type {TxInclusionStateMsgMetricItem}
     * @memberof NodeMessageMetrics
     */
    inTxInclusionState: TxInclusionStateMsgMetricItem;
    /**
     * 
     * @type {TransactionMetricItem}
     * @memberof NodeMessageMetrics
     */
    outPublishGovernanceTransaction: TransactionMetricItem;
    /**
     * 
     * @type {PublisherStateTransactionItem}
     * @memberof NodeMessageMetrics
     */
    outPublisherStateTransaction: PublisherStateTransactionItem;
    /**
     * 
     * @type {InterfaceMetricItem}
     * @memberof NodeMessageMetrics
     */
    outPullLatestOutput: InterfaceMetricItem;
    /**
     * 
     * @type {UTXOInputMetricItem}
     * @memberof NodeMessageMetrics
     */
    outPullOutputByID: UTXOInputMetricItem;
    /**
     * 
     * @type {TransactionIDMetricItem}
     * @memberof NodeMessageMetrics
     */
    outPullTxInclusionState: TransactionIDMetricItem;
    /**
     * 
     * @type {Array<string>}
     * @memberof NodeMessageMetrics
     */
    registeredChainIDs: Array<string>;
}

/**
 * Check if a given object implements the NodeMessageMetrics interface.
 */
export function instanceOfNodeMessageMetrics(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "inAliasOutput" in value;
    isInstance = isInstance && "inMilestone" in value;
    isInstance = isInstance && "inOnLedgerRequest" in value;
    isInstance = isInstance && "inOutput" in value;
    isInstance = isInstance && "inStateOutput" in value;
    isInstance = isInstance && "inTxInclusionState" in value;
    isInstance = isInstance && "outPublishGovernanceTransaction" in value;
    isInstance = isInstance && "outPublisherStateTransaction" in value;
    isInstance = isInstance && "outPullLatestOutput" in value;
    isInstance = isInstance && "outPullOutputByID" in value;
    isInstance = isInstance && "outPullTxInclusionState" in value;
    isInstance = isInstance && "registeredChainIDs" in value;

    return isInstance;
}

export function NodeMessageMetricsFromJSON(json: any): NodeMessageMetrics {
    return NodeMessageMetricsFromJSONTyped(json, false);
}

export function NodeMessageMetricsFromJSONTyped(json: any, ignoreDiscriminator: boolean): NodeMessageMetrics {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'inAliasOutput': AliasOutputMetricItemFromJSON(json['inAliasOutput']),
        'inMilestone': MilestoneMetricItemFromJSON(json['inMilestone']),
        'inOnLedgerRequest': OnLedgerRequestMetricItemFromJSON(json['inOnLedgerRequest']),
        'inOutput': InOutputMetricItemFromJSON(json['inOutput']),
        'inStateOutput': InStateOutputMetricItemFromJSON(json['inStateOutput']),
        'inTxInclusionState': TxInclusionStateMsgMetricItemFromJSON(json['inTxInclusionState']),
        'outPublishGovernanceTransaction': TransactionMetricItemFromJSON(json['outPublishGovernanceTransaction']),
        'outPublisherStateTransaction': PublisherStateTransactionItemFromJSON(json['outPublisherStateTransaction']),
        'outPullLatestOutput': InterfaceMetricItemFromJSON(json['outPullLatestOutput']),
        'outPullOutputByID': UTXOInputMetricItemFromJSON(json['outPullOutputByID']),
        'outPullTxInclusionState': TransactionIDMetricItemFromJSON(json['outPullTxInclusionState']),
        'registeredChainIDs': json['registeredChainIDs'],
    };
}

export function NodeMessageMetricsToJSON(value?: NodeMessageMetrics | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'inAliasOutput': AliasOutputMetricItemToJSON(value.inAliasOutput),
        'inMilestone': MilestoneMetricItemToJSON(value.inMilestone),
        'inOnLedgerRequest': OnLedgerRequestMetricItemToJSON(value.inOnLedgerRequest),
        'inOutput': InOutputMetricItemToJSON(value.inOutput),
        'inStateOutput': InStateOutputMetricItemToJSON(value.inStateOutput),
        'inTxInclusionState': TxInclusionStateMsgMetricItemToJSON(value.inTxInclusionState),
        'outPublishGovernanceTransaction': TransactionMetricItemToJSON(value.outPublishGovernanceTransaction),
        'outPublisherStateTransaction': PublisherStateTransactionItemToJSON(value.outPublisherStateTransaction),
        'outPullLatestOutput': InterfaceMetricItemToJSON(value.outPullLatestOutput),
        'outPullOutputByID': UTXOInputMetricItemToJSON(value.outPullOutputByID),
        'outPullTxInclusionState': TransactionIDMetricItemToJSON(value.outPullTxInclusionState),
        'registeredChainIDs': value.registeredChainIDs,
    };
}

