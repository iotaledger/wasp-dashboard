/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ContractInfoResponse
 */
export interface ContractInfoResponse {
    /**
     * The description of the contract.
     * @type {string}
     * @memberof ContractInfoResponse
     */
    description?: string;
    /**
     * The id (HName(name)) of the contract.
     * @type {number}
     * @memberof ContractInfoResponse
     */
    hName?: number;
    /**
     * The name of the contract.
     * @type {string}
     * @memberof ContractInfoResponse
     */
    name?: string;
    /**
     * The hash of the contract.
     * @type {Array<number>}
     * @memberof ContractInfoResponse
     */
    programHash?: Array<number>;
}

/**
 * Check if a given object implements the ContractInfoResponse interface.
 */
export function instanceOfContractInfoResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ContractInfoResponseFromJSON(json: any): ContractInfoResponse {
    return ContractInfoResponseFromJSONTyped(json, false);
}

export function ContractInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ContractInfoResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'description': !exists(json, 'Description') ? undefined : json['Description'],
        'hName': !exists(json, 'HName') ? undefined : json['HName'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'programHash': !exists(json, 'ProgramHash') ? undefined : json['ProgramHash'],
    };
}

export function ContractInfoResponseToJSON(value?: ContractInfoResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Description': value.description,
        'HName': value.hName,
        'Name': value.name,
        'ProgramHash': value.programHash,
    };
}

