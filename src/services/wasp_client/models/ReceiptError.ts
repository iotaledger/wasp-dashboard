/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ReceiptError
 */
export interface ReceiptError {
    /**
     * 
     * @type {number}
     * @memberof ReceiptError
     */
    contractID?: number;
    /**
     * 
     * @type {string}
     * @memberof ReceiptError
     */
    errorCode?: string;
    /**
     * 
     * @type {number}
     * @memberof ReceiptError
     */
    errorID?: number;
    /**
     * 
     * @type {string}
     * @memberof ReceiptError
     */
    message?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ReceiptError
     */
    parameters?: Array<string>;
}

/**
 * Check if a given object implements the ReceiptError interface.
 */
export function instanceOfReceiptError(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ReceiptErrorFromJSON(json: any): ReceiptError {
    return ReceiptErrorFromJSONTyped(json, false);
}

export function ReceiptErrorFromJSONTyped(json: any, ignoreDiscriminator: boolean): ReceiptError {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'contractID': !exists(json, 'ContractID') ? undefined : json['ContractID'],
        'errorCode': !exists(json, 'ErrorCode') ? undefined : json['ErrorCode'],
        'errorID': !exists(json, 'ErrorID') ? undefined : json['ErrorID'],
        'message': !exists(json, 'Message') ? undefined : json['Message'],
        'parameters': !exists(json, 'Parameters') ? undefined : json['Parameters'],
    };
}

export function ReceiptErrorToJSON(value?: ReceiptError | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'ContractID': value.contractID,
        'ErrorCode': value.errorCode,
        'ErrorID': value.errorID,
        'Message': value.message,
        'Parameters': value.parameters,
    };
}

