/* tslint:disable */
/* eslint-disable */
/**
 * Wasp API
 * REST API for the Wasp node
 *
 * The version of the OpenAPI document: 0.3.8
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { BaseToken } from './BaseToken';
import {
    BaseTokenFromJSON,
    BaseTokenFromJSONTyped,
    BaseTokenToJSON,
} from './BaseToken';
import type { ProtocolParameters } from './ProtocolParameters';
import {
    ProtocolParametersFromJSON,
    ProtocolParametersFromJSONTyped,
    ProtocolParametersToJSON,
} from './ProtocolParameters';

/**
 * 
 * @export
 * @interface L1Params
 */
export interface L1Params {
    /**
     * 
     * @type {BaseToken}
     * @memberof L1Params
     */
    baseToken?: BaseToken;
    /**
     * 
     * @type {number}
     * @memberof L1Params
     */
    maxPayloadSize?: number;
    /**
     * 
     * @type {ProtocolParameters}
     * @memberof L1Params
     */
    protocol?: ProtocolParameters;
}

/**
 * Check if a given object implements the L1Params interface.
 */
export function instanceOfL1Params(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function L1ParamsFromJSON(json: any): L1Params {
    return L1ParamsFromJSONTyped(json, false);
}

export function L1ParamsFromJSONTyped(json: any, ignoreDiscriminator: boolean): L1Params {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'baseToken': !exists(json, 'BaseToken') ? undefined : BaseTokenFromJSON(json['BaseToken']),
        'maxPayloadSize': !exists(json, 'MaxPayloadSize') ? undefined : json['MaxPayloadSize'],
        'protocol': !exists(json, 'Protocol') ? undefined : ProtocolParametersFromJSON(json['Protocol']),
    };
}

export function L1ParamsToJSON(value?: L1Params | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'BaseToken': BaseTokenToJSON(value.baseToken),
        'MaxPayloadSize': value.maxPayloadSize,
        'Protocol': ProtocolParametersToJSON(value.protocol),
    };
}

